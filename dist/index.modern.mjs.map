{"version":3,"file":"index.modern.mjs","sources":["../src/inputs/Input.ts","../src/inputs/DescriptionInput.ts","../src/api.ts","../src/inputs/StepsToReproduceInput.ts","../src/inputs/FileInput.ts","../src/inputs/ScreenshotsFileInput.ts","../src/inputs/VideosFileInput.ts","../src/inputs/LogsFileInput.ts","../src/inputs/MediaFileInput.ts","../src/Form.ts","../src/index.ts"],"sourcesContent":["export class Input {\n  isDisabled: boolean = false;\n  element: HTMLInputElement | null = null;\n  errorMsgElement: HTMLElement | null = null;\n  validator: ((value: string) => boolean) | null = null;\n\n  constructor({\n    name,\n    formElement,\n    validator,\n    onInput,\n  }: {\n    name: string;\n    formElement: HTMLElement;\n    validator?: (value: string) => boolean;\n    onInput?: (value: string) => void;\n  }) {\n    const element = formElement.querySelector(\n      `[data-bhwf-input=\"${name}\"]`\n    ) as HTMLInputElement | null;\n    const errorMsgElement = formElement.querySelector(`[data-bhwf-error-msg=\"${name}\"]`) as HTMLElement | null;\n\n    this.isDisabled = element === null;\n    if (this.isDisabled) return;\n\n    this.element = element;\n\n    this.errorMsgElement = errorMsgElement;\n    this.validator = validator || null;\n\n    if (onInput) {\n      element?.addEventListener(\"input\", (e: Event) =>\n        onInput((e.target as HTMLInputElement)?.value || \"\")\n      );\n    }\n  }\n\n  validate = (): boolean => this.validator?.(this.getValue()) ?? true;\n  getValue = (): string => (this.element !== null ? this.element.value : \"\");\n  reset = () => {\n    if (this.element !== null) this.element.value = \"\";\n  };\n}\n","import { Input } from './Input';\n\nexport class DescriptionInput extends Input {\n  constructor(formElement: HTMLElement) {\n    const validator = (value: string) => {\n      const isValid = value.length > 50;\n      if (isValid === false) {\n        this.element?.classList.add('bhwf-error');\n        if (this.errorMsgElement) {\n          this.errorMsgElement.innerText = 'Description must be at least 50 characters long';\n        }\n      }\n      return isValid;\n    };\n\n    const onInput = () => {\n      this.element?.classList.remove('bhwf-error');\n      if (this.errorMsgElement) {\n        this.errorMsgElement.innerText = '';\n      }\n    }\n\n    super({\n      name: 'description',\n      formElement,\n      validator,\n      onInput,\n    });\n  }\n}","import { CreateNewIssueArgs, CreateNewIssueResponse } from \"./types\";\n\n// const ENDPOINT = 'http://localhost';\nconst ENDPOINT = 'https://app.betahub.io';\n\nexport const createNewIssue = async ({\n  projectId,\n  title,\n  description,\n  stepsToReproduce,\n}: CreateNewIssueArgs): Promise<CreateNewIssueResponse> => {\n  const params = new URLSearchParams();\n  if (title) params.append('issue[title]', title);\n  params.append('issue[description]', description);\n  if (stepsToReproduce) params.append('issue[unformatted_steps_to_reproduce]', stepsToReproduce);\n\n  const response = await fetch(\n    `${ENDPOINT}/projects/${projectId}/issues.json`,\n    {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Authorization': 'FormUser anonymous',\n        'BetaHub-Project-ID': projectId,\n      },\n      body: params.toString()\n    }\n  );\n\n  if (!response.ok) {\n    throw new Error(`HTTP error! status: ${response.status}`);\n  }\n\n  return response.json();\n};\n\nexport const uploadScreenshot = async ({\n  projectId,\n  issueId,\n  screenshot,\n}: {\n  projectId: string;\n  issueId: number;\n  screenshot: Blob;\n}) => {\n  const formData = new FormData();\n  formData.append('screenshot[image]', screenshot);\n\n  const response = await fetch(\n    `${ENDPOINT}/projects/${projectId}/issues/g-${issueId}/screenshots`,\n    {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Authorization': 'FormUser anonymous',\n        'BetaHub-Project-ID': projectId,\n      },\n      body: formData\n    }\n  );\n\n  if (!response.ok) {\n    throw new Error(`HTTP error! status: ${response.status}`);\n  }\n\n  return response.json();\n};\n\nexport const uploadVideoClip = async ({\n  projectId,\n  issueId,\n  videoClip,\n}: {\n  projectId: string;\n  issueId: number;\n  videoClip: Blob;\n}) => {\n  const formData = new FormData();\n  formData.append('video_clip[video]', videoClip);\n\n  const response = await fetch(\n    `${ENDPOINT}/projects/${projectId}/issues/g-${issueId}/video_clips`,\n    {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Authorization': 'FormUser anonymous',\n        'BetaHub-Project-ID': projectId,\n      },\n      body: formData\n    }\n  );\n\n  if (!response.ok) {\n    throw new Error(`HTTP error! status: ${response.status}`);\n  }\n\n  return response.json();\n};\n\nexport const uploadLogFile = async ({\n  projectId,\n  issueId,\n  logFile,\n}: {\n  projectId: string;\n  issueId: number;\n  logFile: Blob;\n}) => {\n  const formData = new FormData();\n  formData.append('log_file[file]', logFile);\n\n  const response = await fetch(\n    `${ENDPOINT}/projects/${projectId}/issues/g-${issueId}/log_files`,\n    {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Authorization': 'FormUser anonymous',\n        'BetaHub-Project-ID': projectId,\n      },\n      body: formData\n    }\n  );\n\n  if (!response.ok) {\n    throw new Error(`HTTP error! status: ${response.status}`);\n  }\n\n  return response.json();\n};","import { Input } from \"./Input\";\n\nexport class StepsToReproduceInput extends Input {\n  constructor(formElement: HTMLElement) {\n    super({ name: 'stepsToReproduce', formElement });\n  }\n}\n","export class FileInput {\n  isDisabled: boolean = false;\n  element: HTMLInputElement | null = null;\n  errorMsgElement: HTMLElement | null = null;\n  dropZoneElement: HTMLElement | null = null;\n  fileListElement: HTMLElement | null = null;\n  validator: ((value: FileList | null) => boolean) | null = null;\n\n  constructor({\n    formElement,\n    name,\n    validator,\n    onInput,\n  }: {\n    formElement: HTMLElement;\n    name: string;\n    validator?: (value: FileList | null) => boolean;\n    onInput?: (value: FileList | null) => void;\n  }) {\n    const element = formElement.querySelector(\n      `[data-bhwf-input=\"${name}\"]`\n    ) as HTMLInputElement | null;\n    const errorMsgElement = formElement.querySelector(`[data-bhwf-error-msg=\"${name}\"]`) as HTMLElement | null;\n    const dropZoneElement = formElement.querySelector(`[data-bhwf-drop-zone=\"${name}\"]`) as HTMLElement | null;\n    const fileListElement = formElement.querySelector(`[data-bhwf-file-list=\"${name}\"]`) as HTMLElement | null;\n\n    this.isDisabled = element === null;\n    if (this.isDisabled) return;\n\n    this.element = element;\n\n    this.errorMsgElement = errorMsgElement;\n    this.dropZoneElement = dropZoneElement;\n    this.fileListElement = fileListElement;\n    this.validator = validator || null;\n\n    if (onInput) {\n      element?.addEventListener(\"input\", (e) =>\n        onInput((e.target as HTMLInputElement).files)\n      );\n    }\n\n    // Drag & drop\n    const dropZoneOriginalText = dropZoneElement?.innerText || \"\";\n    if (element && dropZoneElement) {\n      element.style.display = \"none\";\n\n      dropZoneElement.addEventListener(\"dragover\", (e) => {\n        e.preventDefault();\n        dropZoneElement.classList.add(\"bhwf-drag-over\");\n        dropZoneElement.innerText = \"Drop here\";\n      });\n      dropZoneElement.addEventListener(\"dragleave\", () => {\n        dropZoneElement.classList.remove(\"bhwf-drag-over\");\n        dropZoneElement.innerText = dropZoneOriginalText;\n      });\n      dropZoneElement.addEventListener(\"drop\", (e) => {\n        e.preventDefault();\n        dropZoneElement.classList.remove(\"bhwf-drag-over\");\n        const files = (e.dataTransfer?.files || null) as FileList | null;\n        if (files) {\n          element.files = files;\n          element.dispatchEvent(new Event(\"input\"));\n          dropZoneElement.innerText = dropZoneOriginalText;\n        }\n      });\n      dropZoneElement.addEventListener(\"click\", () => element.click());\n    }\n\n    // File list\n    if (fileListElement) {\n    let selectedFiles: any[] = [];\n\n    element?.addEventListener(\"input\", () => {\n        fileListElement.innerHTML = \"\";\n        if (element?.files) {\n            selectedFiles = Array.from(element.files);\n            updateFileList();\n        }\n    });\n\n    function updateFileList() {\n      if (!fileListElement) return;\n\n        fileListElement.innerHTML = \"\";\n        for (let i = 0; i < selectedFiles.length; i++) {\n            const file = selectedFiles[i];\n            const li = document.createElement(\"li\");\n            const img = document.createElement(\"img\");\n\n            if (file.type.startsWith(\"image/\")) {\n                img.src = URL.createObjectURL(file);\n                img.onload = function () {\n                    URL.revokeObjectURL(img.src);\n                };\n                img.classList.add(\"thumbnail\");\n                li.appendChild(img);\n            }\n\n            const textNode = document.createTextNode(file.name);\n            li.appendChild(textNode);\n\n            const removeButton = document.createElement(\"button\");\n            removeButton.classList.add(\"remove-button\");\n            removeButton.textContent = \"Remove\";\n            removeButton.addEventListener(\"click\", () => {\n                selectedFiles.splice(i, 1);\n                updateFileList();\n                if (errorMsgElement) errorMsgElement.innerText = \"\";\n                if (dropZoneElement) dropZoneElement.classList.remove(\"bhwf-error\");\n            });\n            li.appendChild(removeButton);\n\n            fileListElement.appendChild(li);\n        }\n\n        const dataTransfer = new DataTransfer();\n        selectedFiles.forEach(file => dataTransfer.items.add(file));\n        if (element) {\n            element.files = dataTransfer.files;\n        }\n    }\n}\n  }\n\n  validate = (): boolean => this.validator?.(this.getValue()) ?? true;\n  getValue = (): FileList | null =>\n    this.element !== null ? this.element.files : null;\n  reset = () => {\n    if (this.element !== null) this.element.value = \"\";\n    if (this.fileListElement !== null) this.fileListElement.innerHTML = \"\";\n  };\n}\n","import { FileInput } from \"./FileInput\";\n\nexport class ScreenshotsFileInput extends FileInput {\n  constructor(formElement: HTMLElement) {\n    const validator = (value: FileList | null) => {\n      if (value) {\n        for (let i = 0; i < value.length; i++) {\n          const file = value[i];\n          if (!file.type.startsWith(\"image/\")) {\n            this.element?.classList.add('bhwf-error');\n            this.dropZoneElement?.classList.add('bhwf-error');\n            if (this.errorMsgElement) {\n              this.errorMsgElement.innerText = 'All files must be images';\n            }\n            return false;\n          }\n        }\n      }\n      return true;\n    };\n\n    const onInput = () => {\n      this.element?.classList.remove('bhwf-error');\n      if (this.errorMsgElement) {\n        this.errorMsgElement.innerText = '';\n      }\n    }\n\n    super({ name: 'screenshots', formElement, validator, onInput });\n  }\n}\n","import { FileInput } from \"./FileInput\";\n\nexport class VideosFileInput extends FileInput {\n  constructor(formElement: HTMLElement) {\n    const validator = (value: FileList | null) => {\n      if (value) {\n        for (let i = 0; i < value.length; i++) {\n          const file = value[i];\n          if (!file.type.startsWith(\"video/\")) {\n            this.element?.classList.add('bhwf-error');\n            this.dropZoneElement?.classList.add('bhwf-error');\n            if (this.errorMsgElement) {\n              this.errorMsgElement.innerText = 'All files must be videos';\n            }\n            return false;\n          }\n        }\n      }\n      return true;\n    };\n\n    const onInput = () => {\n      this.element?.classList.remove('bhwf-error');\n      if (this.errorMsgElement) {\n        this.errorMsgElement.innerText = '';\n      }\n    }\n\n    super({ name: 'videos', formElement, validator, onInput });\n  }\n}\n","import { FileInput } from \"./FileInput\";\n\nexport class LogsFileInput extends FileInput {\n  constructor(formElement: HTMLElement) {\n    const validator = (value: FileList | null) => {\n      if (value) {\n        for (let i = 0; i < value.length; i++) {\n          const file = value[i];\n          if (file.type.startsWith(\"image/\") || file.type.startsWith(\"video/\")) {\n            this.element?.classList.add('bhwf-error');\n            this.dropZoneElement?.classList.add('bhwf-error');\n            if (this.errorMsgElement) {\n              this.errorMsgElement.innerText = 'Files cannot be images or videos';\n            }\n            return false;\n          }\n        }\n      }\n      return true;\n    };\n\n    const onInput = () => {\n      this.element?.classList.remove('bhwf-error');\n      if (this.errorMsgElement) {\n        this.errorMsgElement.innerText = '';\n      }\n    }\n\n    super({ name: 'logs', formElement, validator, onInput });\n  }\n}\n","import { FileInput } from \"./FileInput\";\n\nexport class MediaFileInput extends FileInput {\n  constructor(formElement: HTMLElement) {\n    super({ name: \"media\", formElement });\n  }\n}\n","import { DescriptionInput } from \"./inputs/DescriptionInput\";\nimport { Input } from \"./inputs/Input\";\nimport * as API from \"./api\";\nimport { CreateNewIssueArgs } from \"./types\";\nimport { StepsToReproduceInput } from \"./inputs/StepsToReproduceInput\";\nimport { FileInput } from \"./inputs/FileInput\";\nimport { ScreenshotsFileInput } from \"./inputs/ScreenshotsFileInput\";\nimport { VideosFileInput } from \"./inputs/VideosFileInput\";\nimport { LogsFileInput } from \"./inputs/LogsFileInput\";\nimport { MediaFileInput } from \"./inputs/MediaFileInput\";\n\nexport class Form {\n  projectId: string | null = null;\n  inputs: { [inputName: string]: Input } = {};\n  fileInputs: { [inputName: string]: FileInput } = {};\n\n  formElement: HTMLElement;\n\n  constructor({ formElement }: { formElement: HTMLElement }) {\n    this.projectId = formElement.getAttribute(\"data-bhwf-form\");\n    this.formElement = formElement;\n\n    this._loadDefaultInputs();\n    this._handleButtons();\n  }\n\n  _loadDefaultInputs() {\n    this.inputs = {\n      description: new DescriptionInput(this.formElement),\n      stepsToReproduce: new StepsToReproduceInput(this.formElement),\n    };\n    this.inputs = Object.fromEntries(\n      Object.entries(this.inputs).filter(([key, input]) => !input.isDisabled)\n    );\n\n    this.fileInputs = {\n      screenshots: new ScreenshotsFileInput(this.formElement),\n      videos: new VideosFileInput(this.formElement),\n      logs: new LogsFileInput(this.formElement),\n      media: new MediaFileInput(this.formElement),\n    };\n    this.fileInputs = Object.fromEntries(\n      Object.entries(this.fileInputs).filter(\n        ([key, input]) => !input.isDisabled\n      )\n    );\n  }\n\n  _handleButtons() {\n    const submitButtons = this.formElement.querySelectorAll(\n      '[data-bhwf-button=\"submit\"]'\n    );\n    submitButtons.forEach((submitButton: Element) => {\n      (submitButton as HTMLButtonElement).addEventListener(\"click\", () => {\n        if (this.validate()) {\n          this.submit();\n        }\n      });\n    });\n\n    const resetButtons = this.formElement.querySelectorAll(\n      '[data-bhwf-button=\"reset\"]'\n    );\n    resetButtons.forEach((resetButton: Element) => {\n      (resetButton as HTMLButtonElement).addEventListener(\"click\", () => {\n        Object.values(this.inputs).map((input) => input.reset());\n        Object.values(this.fileInputs).map((input) => input.reset());\n        this.formElement.removeAttribute(\"data-bhwf-state\");\n      });\n    });\n  }\n\n  validate = () => {\n    const allInputs = [\n      ...Object.values(this.inputs),\n      ...Object.values(this.fileInputs),\n    ];\n    return allInputs.reduce(\n      (isValidSoFar, input) => input.validate() && isValidSoFar,\n      true\n    );\n  };\n\n  async submit() {\n    if (!this.projectId) return;\n\n    const inputsData = {\n      description: this.inputs.description?.getValue() || undefined,\n      stepsToReproduce: this.inputs.stepsToReproduce?.getValue() || undefined,\n    } as CreateNewIssueArgs;\n\n    const fileInputsData = {\n      screenshots: this.fileInputs.screenshots?.getValue() || undefined,\n      videos: this.fileInputs.videos?.getValue() || undefined,\n      logs: this.fileInputs.logs?.getValue() || undefined,\n      media: this.fileInputs.media?.getValue() || undefined,\n    };\n\n    this.formElement.setAttribute(\"data-bhwf-state\", \"loading\");\n    try {\n      const { id: issueId } = await API.createNewIssue({\n        ...inputsData,\n        projectId: this.projectId,\n      });\n\n      if (fileInputsData.screenshots && fileInputsData.screenshots.length > 0) {\n        for (const screenshot of fileInputsData.screenshots) {\n          await API.uploadScreenshot({\n            projectId: this.projectId,\n            issueId,\n            screenshot,\n          });\n        }\n      }\n\n      if (fileInputsData.videos && fileInputsData.videos.length > 0) {\n        for (const videoClip of fileInputsData.videos) {\n          await API.uploadVideoClip({\n            projectId: this.projectId,\n            issueId,\n            videoClip,\n          });\n        }\n      }\n\n      if (fileInputsData.logs && fileInputsData.logs.length > 0) {\n        for (const logFile of fileInputsData.logs) {\n          await API.uploadLogFile({\n            projectId: this.projectId,\n            issueId,\n            logFile,\n          });\n        }\n      }\n\n      \n      if (fileInputsData.media && fileInputsData.media.length > 0) {\n        for (const mediaFile of fileInputsData.media) {\n          const fileType = mediaFile.type;\n\n          if (fileType.startsWith(\"image/\")) {\n            await API.uploadScreenshot({\n              projectId: this.projectId,\n              issueId,\n              screenshot: mediaFile,\n            });\n          } else if (fileType.startsWith(\"video/\")) {\n            await API.uploadVideoClip({\n              projectId: this.projectId,\n              issueId,\n              videoClip: mediaFile,\n            });\n          } else {\n            await API.uploadLogFile({\n              projectId: this.projectId,\n              issueId,\n              logFile: mediaFile,\n            });\n          }\n        }\n      }\n\n      this.formElement.setAttribute(\"data-bhwf-state\", \"success\");\n    } catch (error) {\n      this.formElement.setAttribute(\"data-bhwf-state\", \"error\");\n    }\n  }\n}\n","import { Form } from './Form';\n\nexport * from './types';\nexport * as API from './api';\n\nexport const init = () => {\n  const forms = document.querySelectorAll('[data-bhwf-form]') as NodeListOf<HTMLElement>;\n  forms.forEach((formElement) => {\n    new Form({ formElement });\n  });\n};\n\ndeclare global {\n  interface Window {\n    bhwf: {\n      init: () => void;\n      forms: { [projectId: string]: Form };\n    };\n  }\n}\n\nconst bhwf = {\n  init,\n  forms: {},\n};\nwindow.bhwf = bhwf;"],"names":["Input","constructor","name","formElement","validator","onInput","isDisabled","element","this","errorMsgElement","validate","_this$validator","_this$validator2","call","getValue","value","reset","querySelector","addEventListener","e","_e$target","target","DescriptionInput","super","isValid","length","_this$element","classList","add","innerText","_this$element2","remove","ENDPOINT","createNewIssue","async","projectId","title","description","stepsToReproduce","params","URLSearchParams","append","response","fetch","method","headers","Accept","Authorization","body","toString","ok","Error","status","json","uploadScreenshot","issueId","screenshot","formData","FormData","uploadVideoClip","videoClip","uploadLogFile","logFile","StepsToReproduceInput","FileInput","dropZoneElement","fileListElement","files","innerHTML","dropZoneOriginalText","style","display","preventDefault","_e$dataTransfer","dataTransfer","dispatchEvent","Event","click","selectedFiles","updateFileList","i","file","li","document","createElement","img","type","startsWith","src","URL","createObjectURL","onload","revokeObjectURL","appendChild","textNode","createTextNode","removeButton","textContent","splice","DataTransfer","forEach","items","Array","from","ScreenshotsFileInput","_this$dropZoneElement","VideosFileInput","LogsFileInput","MediaFileInput","Form","inputs","fileInputs","Object","values","reduce","isValidSoFar","input","getAttribute","_loadDefaultInputs","_handleButtons","fromEntries","entries","filter","key","screenshots","videos","logs","media","querySelectorAll","submitButton","submit","resetButton","map","removeAttribute","_this$inputs$descript","_this$inputs$stepsToR","_this$fileInputs$scre","_this$fileInputs$vide","_this$fileInputs$logs","_this$fileInputs$medi","inputsData","undefined","fileInputsData","setAttribute","id","API","_extends","mediaFile","fileType","error","init","window","bhwf","forms"],"mappings":"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"}