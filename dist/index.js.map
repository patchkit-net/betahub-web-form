{"version":3,"file":"index.js","sources":["../src/inputs/Input.ts","../src/inputs/DescriptionInput.ts","../src/api.ts","../src/inputs/StepsToReproduceInput.ts","../src/inputs/FileInput.ts","../src/inputs/ScreenshotsFileInput.ts","../src/inputs/VideosFileInput.ts","../src/inputs/LogsFileInput.ts","../src/inputs/MediaFileInput.ts","../src/Form.ts","../src/index.ts"],"sourcesContent":["export class Input {\n  isDisabled: boolean = false;\n  element: HTMLInputElement | null = null;\n  errorMsgElement: HTMLElement | null = null;\n  validator: ((value: string) => boolean) | null = null;\n\n  constructor({\n    name,\n    formElement,\n    validator,\n    onInput,\n  }: {\n    name: string;\n    formElement: HTMLElement;\n    validator?: (value: string) => boolean;\n    onInput?: (value: string) => void;\n  }) {\n    const element = formElement.querySelector(\n      `[data-bhwf-input=\"${name}\"]`\n    ) as HTMLInputElement | null;\n    const errorMsgElement = formElement.querySelector(`[data-bhwf-error-msg=\"${name}\"]`) as HTMLElement | null;\n\n    this.isDisabled = element === null;\n    if (this.isDisabled) return;\n\n    this.element = element;\n\n    this.errorMsgElement = errorMsgElement;\n    this.validator = validator || null;\n\n    if (onInput) {\n      element?.addEventListener(\"input\", (e: Event) =>\n        onInput((e.target as HTMLInputElement)?.value || \"\")\n      );\n    }\n  }\n\n  validate = (): boolean => this.validator?.(this.getValue()) ?? true;\n  getValue = (): string => (this.element !== null ? this.element.value : \"\");\n  reset = () => {\n    if (this.element !== null) this.element.value = \"\";\n  };\n}\n","import { Input } from './Input';\n\nexport class DescriptionInput extends Input {\n  constructor(formElement: HTMLElement) {\n    const validator = (value: string) => {\n      const isValid = value.length > 50;\n      if (isValid === false) {\n        this.element?.classList.add('bhwf-error');\n        if (this.errorMsgElement) {\n          this.errorMsgElement.innerText = 'Description must be at least 50 characters long';\n        }\n      }\n      return isValid;\n    };\n\n    const onInput = () => {\n      this.element?.classList.remove('bhwf-error');\n      if (this.errorMsgElement) {\n        this.errorMsgElement.innerText = '';\n      }\n    }\n\n    super({\n      name: 'description',\n      formElement,\n      validator,\n      onInput,\n    });\n  }\n}","import { CreateNewIssueArgs, CreateNewIssueResponse } from \"./types\";\n\n// const ENDPOINT = 'http://localhost';\nconst ENDPOINT = 'https://app.betahub.io';\n\nexport const createNewIssue = async ({\n  projectId,\n  title,\n  description,\n  stepsToReproduce,\n}: CreateNewIssueArgs): Promise<CreateNewIssueResponse> => {\n  const params = new URLSearchParams();\n  if (title) params.append('issue[title]', title);\n  params.append('issue[description]', description);\n  if (stepsToReproduce) params.append('issue[unformatted_steps_to_reproduce]', stepsToReproduce);\n\n  const response = await fetch(\n    `${ENDPOINT}/projects/${projectId}/issues.json`,\n    {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Authorization': 'FormUser anonymous',\n        'BetaHub-Project-ID': projectId,\n      },\n      body: params.toString()\n    }\n  );\n\n  if (!response.ok) {\n    throw new Error(`HTTP error! status: ${response.status}`);\n  }\n\n  return response.json();\n};\n\nexport const uploadScreenshot = async ({\n  projectId,\n  issueId,\n  screenshot,\n}: {\n  projectId: string;\n  issueId: number;\n  screenshot: Blob;\n}) => {\n  const formData = new FormData();\n  formData.append('screenshot[image]', screenshot);\n\n  const response = await fetch(\n    `${ENDPOINT}/projects/${projectId}/issues/g-${issueId}/screenshots`,\n    {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Authorization': 'FormUser anonymous',\n        'BetaHub-Project-ID': projectId,\n      },\n      body: formData\n    }\n  );\n\n  if (!response.ok) {\n    throw new Error(`HTTP error! status: ${response.status}`);\n  }\n\n  return response.json();\n};\n\nexport const uploadVideoClip = async ({\n  projectId,\n  issueId,\n  videoClip,\n}: {\n  projectId: string;\n  issueId: number;\n  videoClip: Blob;\n}) => {\n  const formData = new FormData();\n  formData.append('video_clip[video]', videoClip);\n\n  const response = await fetch(\n    `${ENDPOINT}/projects/${projectId}/issues/g-${issueId}/video_clips`,\n    {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Authorization': 'FormUser anonymous',\n        'BetaHub-Project-ID': projectId,\n      },\n      body: formData\n    }\n  );\n\n  if (!response.ok) {\n    throw new Error(`HTTP error! status: ${response.status}`);\n  }\n\n  return response.json();\n};\n\nexport const uploadLogFile = async ({\n  projectId,\n  issueId,\n  logFile,\n}: {\n  projectId: string;\n  issueId: number;\n  logFile: Blob;\n}) => {\n  const formData = new FormData();\n  formData.append('log_file[file]', logFile);\n\n  const response = await fetch(\n    `${ENDPOINT}/projects/${projectId}/issues/g-${issueId}/log_files`,\n    {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Authorization': 'FormUser anonymous',\n        'BetaHub-Project-ID': projectId,\n      },\n      body: formData\n    }\n  );\n\n  if (!response.ok) {\n    throw new Error(`HTTP error! status: ${response.status}`);\n  }\n\n  return response.json();\n};","import { Input } from \"./Input\";\n\nexport class StepsToReproduceInput extends Input {\n  constructor(formElement: HTMLElement) {\n    super({ name: 'stepsToReproduce', formElement });\n  }\n}\n","export class FileInput {\n  isDisabled: boolean = false;\n  element: HTMLInputElement | null = null;\n  errorMsgElement: HTMLElement | null = null;\n  dropZoneElement: HTMLElement | null = null;\n  fileListElement: HTMLElement | null = null;\n  validator: ((value: FileList | null) => boolean) | null = null;\n\n  constructor({\n    formElement,\n    name,\n    validator,\n    onInput,\n  }: {\n    formElement: HTMLElement;\n    name: string;\n    validator?: (value: FileList | null) => boolean;\n    onInput?: (value: FileList | null) => void;\n  }) {\n    const element = formElement.querySelector(\n      `[data-bhwf-input=\"${name}\"]`\n    ) as HTMLInputElement | null;\n    const errorMsgElement = formElement.querySelector(`[data-bhwf-error-msg=\"${name}\"]`) as HTMLElement | null;\n    const dropZoneElement = formElement.querySelector(`[data-bhwf-drop-zone=\"${name}\"]`) as HTMLElement | null;\n    const fileListElement = formElement.querySelector(`[data-bhwf-file-list=\"${name}\"]`) as HTMLElement | null;\n\n    this.isDisabled = element === null;\n    if (this.isDisabled) return;\n\n    this.element = element;\n\n    this.errorMsgElement = errorMsgElement;\n    this.dropZoneElement = dropZoneElement;\n    this.fileListElement = fileListElement;\n    this.validator = validator || null;\n\n    if (onInput) {\n      element?.addEventListener(\"input\", (e) =>\n        onInput((e.target as HTMLInputElement).files)\n      );\n    }\n\n    // Drag & drop\n    const dropZoneOriginalText = dropZoneElement?.innerText || \"\";\n    if (element && dropZoneElement) {\n      element.style.display = \"none\";\n\n      dropZoneElement.addEventListener(\"dragover\", (e) => {\n        e.preventDefault();\n        dropZoneElement.classList.add(\"bhwf-drag-over\");\n        dropZoneElement.innerText = \"Drop here\";\n      });\n      dropZoneElement.addEventListener(\"dragleave\", () => {\n        dropZoneElement.classList.remove(\"bhwf-drag-over\");\n        dropZoneElement.innerText = dropZoneOriginalText;\n      });\n      dropZoneElement.addEventListener(\"drop\", (e) => {\n        e.preventDefault();\n        dropZoneElement.classList.remove(\"bhwf-drag-over\");\n        const files = (e.dataTransfer?.files || null) as FileList | null;\n        if (files) {\n          element.files = files;\n          element.dispatchEvent(new Event(\"input\"));\n          dropZoneElement.innerText = dropZoneOriginalText;\n        }\n      });\n      dropZoneElement.addEventListener(\"click\", () => element.click());\n    }\n\n    // File list\n    if (fileListElement) {\n    let selectedFiles: any[] = [];\n\n    element?.addEventListener(\"input\", () => {\n        fileListElement.innerHTML = \"\";\n        if (element?.files) {\n            selectedFiles = Array.from(element.files);\n            updateFileList();\n        }\n    });\n\n    function updateFileList() {\n      if (!fileListElement) return;\n\n        fileListElement.innerHTML = \"\";\n        for (let i = 0; i < selectedFiles.length; i++) {\n            const file = selectedFiles[i];\n            const li = document.createElement(\"li\");\n            const img = document.createElement(\"img\");\n\n            if (file.type.startsWith(\"image/\")) {\n                img.src = URL.createObjectURL(file);\n                img.onload = function () {\n                    URL.revokeObjectURL(img.src);\n                };\n                img.classList.add(\"thumbnail\");\n                li.appendChild(img);\n            }\n\n            const textNode = document.createTextNode(file.name);\n            li.appendChild(textNode);\n\n            const removeButton = document.createElement(\"button\");\n            removeButton.classList.add(\"remove-button\");\n            removeButton.textContent = \"Remove\";\n            removeButton.addEventListener(\"click\", () => {\n                selectedFiles.splice(i, 1);\n                updateFileList();\n                if (errorMsgElement) errorMsgElement.innerText = \"\";\n                if (dropZoneElement) dropZoneElement.classList.remove(\"bhwf-error\");\n            });\n            li.appendChild(removeButton);\n\n            fileListElement.appendChild(li);\n        }\n\n        const dataTransfer = new DataTransfer();\n        selectedFiles.forEach(file => dataTransfer.items.add(file));\n        if (element) {\n            element.files = dataTransfer.files;\n        }\n    }\n}\n  }\n\n  validate = (): boolean => this.validator?.(this.getValue()) ?? true;\n  getValue = (): FileList | null =>\n    this.element !== null ? this.element.files : null;\n  reset = () => {\n    if (this.element !== null) this.element.value = \"\";\n    if (this.fileListElement !== null) this.fileListElement.innerHTML = \"\";\n  };\n}\n","import { FileInput } from \"./FileInput\";\n\nexport class ScreenshotsFileInput extends FileInput {\n  constructor(formElement: HTMLElement) {\n    const validator = (value: FileList | null) => {\n      if (value) {\n        for (let i = 0; i < value.length; i++) {\n          const file = value[i];\n          if (!file.type.startsWith(\"image/\")) {\n            this.element?.classList.add('bhwf-error');\n            this.dropZoneElement?.classList.add('bhwf-error');\n            if (this.errorMsgElement) {\n              this.errorMsgElement.innerText = 'All files must be images';\n            }\n            return false;\n          }\n        }\n      }\n      return true;\n    };\n\n    const onInput = () => {\n      this.element?.classList.remove('bhwf-error');\n      if (this.errorMsgElement) {\n        this.errorMsgElement.innerText = '';\n      }\n    }\n\n    super({ name: 'screenshots', formElement, validator, onInput });\n  }\n}\n","import { FileInput } from \"./FileInput\";\n\nexport class VideosFileInput extends FileInput {\n  constructor(formElement: HTMLElement) {\n    const validator = (value: FileList | null) => {\n      if (value) {\n        for (let i = 0; i < value.length; i++) {\n          const file = value[i];\n          if (!file.type.startsWith(\"video/\")) {\n            this.element?.classList.add('bhwf-error');\n            this.dropZoneElement?.classList.add('bhwf-error');\n            if (this.errorMsgElement) {\n              this.errorMsgElement.innerText = 'All files must be videos';\n            }\n            return false;\n          }\n        }\n      }\n      return true;\n    };\n\n    const onInput = () => {\n      this.element?.classList.remove('bhwf-error');\n      if (this.errorMsgElement) {\n        this.errorMsgElement.innerText = '';\n      }\n    }\n\n    super({ name: 'videos', formElement, validator, onInput });\n  }\n}\n","import { FileInput } from \"./FileInput\";\n\nexport class LogsFileInput extends FileInput {\n  constructor(formElement: HTMLElement) {\n    const validator = (value: FileList | null) => {\n      if (value) {\n        for (let i = 0; i < value.length; i++) {\n          const file = value[i];\n          if (file.type.startsWith(\"image/\") || file.type.startsWith(\"video/\")) {\n            this.element?.classList.add('bhwf-error');\n            this.dropZoneElement?.classList.add('bhwf-error');\n            if (this.errorMsgElement) {\n              this.errorMsgElement.innerText = 'Files cannot be images or videos';\n            }\n            return false;\n          }\n        }\n      }\n      return true;\n    };\n\n    const onInput = () => {\n      this.element?.classList.remove('bhwf-error');\n      if (this.errorMsgElement) {\n        this.errorMsgElement.innerText = '';\n      }\n    }\n\n    super({ name: 'logs', formElement, validator, onInput });\n  }\n}\n","import { FileInput } from \"./FileInput\";\n\nexport class MediaFileInput extends FileInput {\n  constructor(formElement: HTMLElement) {\n    super({ name: \"media\", formElement });\n  }\n}\n","import { DescriptionInput } from \"./inputs/DescriptionInput\";\nimport { Input } from \"./inputs/Input\";\nimport * as API from \"./api\";\nimport { CreateNewIssueArgs } from \"./types\";\nimport { StepsToReproduceInput } from \"./inputs/StepsToReproduceInput\";\nimport { FileInput } from \"./inputs/FileInput\";\nimport { ScreenshotsFileInput } from \"./inputs/ScreenshotsFileInput\";\nimport { VideosFileInput } from \"./inputs/VideosFileInput\";\nimport { LogsFileInput } from \"./inputs/LogsFileInput\";\nimport { MediaFileInput } from \"./inputs/MediaFileInput\";\n\nexport class Form {\n  projectId: string | null = null;\n  inputs: { [inputName: string]: Input } = {};\n  fileInputs: { [inputName: string]: FileInput } = {};\n\n  formElement: HTMLElement;\n\n  constructor({ formElement }: { formElement: HTMLElement }) {\n    this.projectId = formElement.getAttribute(\"data-bhwf-form\");\n    this.formElement = formElement;\n\n    this._loadDefaultInputs();\n    this._handleButtons();\n  }\n\n  _loadDefaultInputs() {\n    this.inputs = {\n      description: new DescriptionInput(this.formElement),\n      stepsToReproduce: new StepsToReproduceInput(this.formElement),\n    };\n    this.inputs = Object.fromEntries(\n      Object.entries(this.inputs).filter(([key, input]) => !input.isDisabled)\n    );\n\n    this.fileInputs = {\n      screenshots: new ScreenshotsFileInput(this.formElement),\n      videos: new VideosFileInput(this.formElement),\n      logs: new LogsFileInput(this.formElement),\n      media: new MediaFileInput(this.formElement),\n    };\n    this.fileInputs = Object.fromEntries(\n      Object.entries(this.fileInputs).filter(\n        ([key, input]) => !input.isDisabled\n      )\n    );\n  }\n\n  _handleButtons() {\n    const submitButtons = this.formElement.querySelectorAll(\n      '[data-bhwf-button=\"submit\"]'\n    );\n    submitButtons.forEach((submitButton: Element) => {\n      (submitButton as HTMLButtonElement).addEventListener(\"click\", () => {\n        if (this.validate()) {\n          this.submit();\n        }\n      });\n    });\n\n    const resetButtons = this.formElement.querySelectorAll(\n      '[data-bhwf-button=\"reset\"]'\n    );\n    resetButtons.forEach((resetButton: Element) => {\n      (resetButton as HTMLButtonElement).addEventListener(\"click\", () => {\n        Object.values(this.inputs).map((input) => input.reset());\n        Object.values(this.fileInputs).map((input) => input.reset());\n        this.formElement.removeAttribute(\"data-bhwf-state\");\n      });\n    });\n  }\n\n  validate = () => {\n    const allInputs = [\n      ...Object.values(this.inputs),\n      ...Object.values(this.fileInputs),\n    ];\n    return allInputs.reduce(\n      (isValidSoFar, input) => input.validate() && isValidSoFar,\n      true\n    );\n  };\n\n  async submit() {\n    if (!this.projectId) return;\n\n    const inputsData = {\n      description: this.inputs.description?.getValue() || undefined,\n      stepsToReproduce: this.inputs.stepsToReproduce?.getValue() || undefined,\n    } as CreateNewIssueArgs;\n\n    const fileInputsData = {\n      screenshots: this.fileInputs.screenshots?.getValue() || undefined,\n      videos: this.fileInputs.videos?.getValue() || undefined,\n      logs: this.fileInputs.logs?.getValue() || undefined,\n      media: this.fileInputs.media?.getValue() || undefined,\n    };\n\n    this.formElement.setAttribute(\"data-bhwf-state\", \"loading\");\n    try {\n      const { id: issueId } = await API.createNewIssue({\n        ...inputsData,\n        projectId: this.projectId,\n      });\n\n      if (fileInputsData.screenshots && fileInputsData.screenshots.length > 0) {\n        for (const screenshot of fileInputsData.screenshots) {\n          await API.uploadScreenshot({\n            projectId: this.projectId,\n            issueId,\n            screenshot,\n          });\n        }\n      }\n\n      if (fileInputsData.videos && fileInputsData.videos.length > 0) {\n        for (const videoClip of fileInputsData.videos) {\n          await API.uploadVideoClip({\n            projectId: this.projectId,\n            issueId,\n            videoClip,\n          });\n        }\n      }\n\n      if (fileInputsData.logs && fileInputsData.logs.length > 0) {\n        for (const logFile of fileInputsData.logs) {\n          await API.uploadLogFile({\n            projectId: this.projectId,\n            issueId,\n            logFile,\n          });\n        }\n      }\n\n      \n      if (fileInputsData.media && fileInputsData.media.length > 0) {\n        for (const mediaFile of fileInputsData.media) {\n          const fileType = mediaFile.type;\n\n          if (fileType.startsWith(\"image/\")) {\n            await API.uploadScreenshot({\n              projectId: this.projectId,\n              issueId,\n              screenshot: mediaFile,\n            });\n          } else if (fileType.startsWith(\"video/\")) {\n            await API.uploadVideoClip({\n              projectId: this.projectId,\n              issueId,\n              videoClip: mediaFile,\n            });\n          } else {\n            await API.uploadLogFile({\n              projectId: this.projectId,\n              issueId,\n              logFile: mediaFile,\n            });\n          }\n        }\n      }\n\n      this.formElement.setAttribute(\"data-bhwf-state\", \"success\");\n    } catch (error) {\n      this.formElement.setAttribute(\"data-bhwf-state\", \"error\");\n    }\n  }\n}\n","import { Form } from './Form';\n\nexport * from './types';\nexport * as API from './api';\n\nexport const init = () => {\n  const forms = document.querySelectorAll('[data-bhwf-form]') as NodeListOf<HTMLElement>;\n  forms.forEach((formElement) => {\n    new Form({ formElement });\n  });\n};\n\ndeclare global {\n  interface Window {\n    bhwf: {\n      init: () => void;\n      forms: { [projectId: string]: Form };\n    };\n  }\n}\n\nconst bhwf = {\n  init,\n  forms: {},\n};\nwindow.bhwf = bhwf;"],"names":["Input","_ref","_this","this","name","formElement","validator","onInput","isDisabled","element","errorMsgElement","validate","_this$validator","getValue","value","reset","querySelector","addEventListener","e","_e$target","target","DescriptionInput","_Input","call","_this$element","isValid","length","classList","add","innerText","_this$element2","remove","_inheritsLoose","ENDPOINT","createNewIssue","projectId","title","description","stepsToReproduce","params","URLSearchParams","append","Promise","resolve","fetch","method","headers","Accept","Authorization","body","toString","then","response","ok","Error","status","json","reject","uploadScreenshot","_ref2","issueId","screenshot","formData","FormData","uploadVideoClip","_ref3","videoClip","uploadLogFile","_ref4","logFile","StepsToReproduceInput","FileInput","dropZoneElement","fileListElement","files","innerHTML","dropZoneOriginalText","style","display","preventDefault","_e$dataTransfer","dataTransfer","dispatchEvent","Event","click","updateFileList","_loop","i","file","selectedFiles","li","document","createElement","img","type","startsWith","src","URL","createObjectURL","onload","revokeObjectURL","appendChild","textNode","createTextNode","removeButton","textContent","splice","DataTransfer","forEach","items","Array","from","ScreenshotsFileInput","_FileInput","_this$dropZoneElement","VideosFileInput","LogsFileInput","MediaFileInput","_settle","pact","state","s","_Pact","o","bind","v","observer","prototype","onFulfilled","result","onRejected","callback","thenable","check","array","_cycle","Form","inputs","fileInputs","concat","Object","values","reduce","isValidSoFar","input","getAttribute","_loadDefaultInputs","_handleButtons","_proto","fromEntries","entries","filter","screenshots","videos","logs","media","_this2","querySelectorAll","submitButton","submit","resetButton","map","removeAttribute","_this3$inputs$descrip","_this3$inputs$stepsTo","_this3$fileInputs$scr","_this3$fileInputs$vid","_this3$fileInputs$log","_this3$fileInputs$med","_this3","inputsData","undefined","fileInputsData","setAttribute","API","_extends","id","_temp13","_temp11","_temp9","_temp7","_temp6","_forOf","mediaFile","fileType","_temp5","_temp14","_temp8","_temp3","_temp10","_temp2","_temp12","_temp","_catch","init","window","bhwf","forms"],"mappings":"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"}